{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letsw\\\\Desktop\\\\BroCode\\\\AQBalance\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const sectionRef = useRef(null);\n  const stats = [{\n    icon: 'fas fa-car',\n    number: '1,247',\n    label: 'Total Registered Car Washes'\n  }, {\n    icon: 'fas fa-tint',\n    number: '2.8M',\n    label: 'Liters Monthly Water Use'\n  }, {\n    icon: 'fas fa-check-circle',\n    number: '73%',\n    label: 'Compliant with Wastewater Disposal'\n  }, {\n    icon: 'fas fa-chart-line',\n    number: '342',\n    label: 'Informal Car Washes Formalized This Year'\n  }];\n  useEffect(() => {\n    const animateCounters = () => {\n      if (hasAnimated) return;\n      const counters = document.querySelectorAll('.stat-number');\n      counters.forEach(counter => {\n        const target = counter.innerText;\n        const numericTarget = parseFloat(target.replace(/[^0-9.]/g, ''));\n        let current = 0;\n        const increment = numericTarget / 100;\n        const timer = setInterval(() => {\n          current += increment;\n          if (current >= numericTarget) {\n            counter.innerText = target;\n            clearInterval(timer);\n          } else {\n            if (target.includes('M')) {\n              counter.innerText = current.toFixed(1) + 'M';\n            } else if (target.includes('%')) {\n              counter.innerText = Math.floor(current) + '%';\n            } else {\n              counter.innerText = Math.floor(current).toLocaleString();\n            }\n          }\n        }, 20);\n      });\n      setHasAnimated(true);\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && !hasAnimated) {\n          animateCounters();\n          observer.unobserve(entry.target);\n        }\n      });\n    });\n    if (sectionRef.current) {\n      observer.observe(sectionRef.current);\n    }\n    return () => {\n      if (sectionRef.current) {\n        observer.unobserve(sectionRef.current);\n      }\n    };\n  }, [hasAnimated]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"dashboard section-reveal\",\n    id: \"dashboard\",\n    ref: sectionRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Live Portal Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${stat.icon} stat-icon`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-number\",\n            children: stat.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: stat.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+mtVzDs2AT9juy+pUGNrA8pmXV8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Dashboard","_s","hasAnimated","setHasAnimated","sectionRef","stats","icon","number","label","animateCounters","counters","document","querySelectorAll","forEach","counter","target","innerText","numericTarget","parseFloat","replace","current","increment","timer","setInterval","clearInterval","includes","toFixed","Math","floor","toLocaleString","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","observe","className","id","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stat","index","_c","$RefreshReg$"],"sources":["C:/Users/letsw/Desktop/BroCode/AQBalance/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n  const [hasAnimated, setHasAnimated] = useState(false);\r\n  const sectionRef = useRef(null);\r\n\r\n  const stats = [\r\n    {\r\n      icon: 'fas fa-car',\r\n      number: '1,247',\r\n      label: 'Total Registered Car Washes'\r\n    },\r\n    {\r\n      icon: 'fas fa-tint',\r\n      number: '2.8M',\r\n      label: 'Liters Monthly Water Use'\r\n    },\r\n    {\r\n      icon: 'fas fa-check-circle',\r\n      number: '73%',\r\n      label: 'Compliant with Wastewater Disposal'\r\n    },\r\n    {\r\n      icon: 'fas fa-chart-line',\r\n      number: '342',\r\n      label: 'Informal Car Washes Formalized This Year'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const animateCounters = () => {\r\n      if (hasAnimated) return;\r\n      \r\n      const counters = document.querySelectorAll('.stat-number');\r\n      counters.forEach(counter => {\r\n        const target = counter.innerText;\r\n        const numericTarget = parseFloat(target.replace(/[^0-9.]/g, ''));\r\n        let current = 0;\r\n        const increment = numericTarget / 100;\r\n        \r\n        const timer = setInterval(() => {\r\n          current += increment;\r\n          if (current >= numericTarget) {\r\n            counter.innerText = target;\r\n            clearInterval(timer);\r\n          } else {\r\n            if (target.includes('M')) {\r\n              counter.innerText = current.toFixed(1) + 'M';\r\n            } else if (target.includes('%')) {\r\n              counter.innerText = Math.floor(current) + '%';\r\n            } else {\r\n              counter.innerText = Math.floor(current).toLocaleString();\r\n            }\r\n          }\r\n        }, 20);\r\n      });\r\n      \r\n      setHasAnimated(true);\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting && !hasAnimated) {\r\n          animateCounters();\r\n          observer.unobserve(entry.target);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (sectionRef.current) {\r\n        observer.unobserve(sectionRef.current);\r\n      }\r\n    };\r\n  }, [hasAnimated]);\r\n\r\n  return (\r\n    <section className=\"dashboard section-reveal\" id=\"dashboard\" ref={sectionRef}>\r\n      <div className=\"container\">\r\n        <h2 className=\"section-title\">Live Portal Statistics</h2>\r\n        <div className=\"stats-grid\">\r\n          {stats.map((stat, index) => (\r\n            <div key={index} className=\"stat-card\">\r\n              <i className={`${stat.icon} stat-icon`}></i>\r\n              <div className=\"stat-number\">{stat.number}</div>\r\n              <div className=\"stat-label\">{stat.label}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMO,UAAU,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMS,KAAK,GAAG,CACZ;IACEC,IAAI,EAAE,YAAY;IAClBC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,qBAAqB;IAC3BC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,mBAAmB;IACzBC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE;EACT,CAAC,CACF;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIP,WAAW,EAAE;MAEjB,MAAMQ,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;MAC1DF,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;QAC1B,MAAMC,MAAM,GAAGD,OAAO,CAACE,SAAS;QAChC,MAAMC,aAAa,GAAGC,UAAU,CAACH,MAAM,CAACI,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAChE,IAAIC,OAAO,GAAG,CAAC;QACf,MAAMC,SAAS,GAAGJ,aAAa,GAAG,GAAG;QAErC,MAAMK,KAAK,GAAGC,WAAW,CAAC,MAAM;UAC9BH,OAAO,IAAIC,SAAS;UACpB,IAAID,OAAO,IAAIH,aAAa,EAAE;YAC5BH,OAAO,CAACE,SAAS,GAAGD,MAAM;YAC1BS,aAAa,CAACF,KAAK,CAAC;UACtB,CAAC,MAAM;YACL,IAAIP,MAAM,CAACU,QAAQ,CAAC,GAAG,CAAC,EAAE;cACxBX,OAAO,CAACE,SAAS,GAAGI,OAAO,CAACM,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;YAC9C,CAAC,MAAM,IAAIX,MAAM,CAACU,QAAQ,CAAC,GAAG,CAAC,EAAE;cAC/BX,OAAO,CAACE,SAAS,GAAGW,IAAI,CAACC,KAAK,CAACR,OAAO,CAAC,GAAG,GAAG;YAC/C,CAAC,MAAM;cACLN,OAAO,CAACE,SAAS,GAAGW,IAAI,CAACC,KAAK,CAACR,OAAO,CAAC,CAACS,cAAc,CAAC,CAAC;YAC1D;UACF;QACF,CAAC,EAAE,EAAE,CAAC;MACR,CAAC,CAAC;MAEF1B,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAED,MAAM2B,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACnB,OAAO,CAACoB,KAAK,IAAI;QACvB,IAAIA,KAAK,CAACC,cAAc,IAAI,CAAChC,WAAW,EAAE;UACxCO,eAAe,CAAC,CAAC;UACjBqB,QAAQ,CAACK,SAAS,CAACF,KAAK,CAAClB,MAAM,CAAC;QAClC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIX,UAAU,CAACgB,OAAO,EAAE;MACtBU,QAAQ,CAACM,OAAO,CAAChC,UAAU,CAACgB,OAAO,CAAC;IACtC;IAEA,OAAO,MAAM;MACX,IAAIhB,UAAU,CAACgB,OAAO,EAAE;QACtBU,QAAQ,CAACK,SAAS,CAAC/B,UAAU,CAACgB,OAAO,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAASsC,SAAS,EAAC,0BAA0B;IAACC,EAAE,EAAC,WAAW;IAACC,GAAG,EAAEnC,UAAW;IAAAoC,QAAA,eAC3EzC,OAAA;MAAKsC,SAAS,EAAC,WAAW;MAAAG,QAAA,gBACxBzC,OAAA;QAAIsC,SAAS,EAAC,eAAe;QAAAG,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzD7C,OAAA;QAAKsC,SAAS,EAAC,YAAY;QAAAG,QAAA,EACxBnC,KAAK,CAACwC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBhD,OAAA;UAAiBsC,SAAS,EAAC,WAAW;UAAAG,QAAA,gBACpCzC,OAAA;YAAGsC,SAAS,EAAE,GAAGS,IAAI,CAACxC,IAAI;UAAa;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5C7C,OAAA;YAAKsC,SAAS,EAAC,aAAa;YAAAG,QAAA,EAAEM,IAAI,CAACvC;UAAM;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChD7C,OAAA;YAAKsC,SAAS,EAAC,YAAY;YAAAG,QAAA,EAAEM,IAAI,CAACtC;UAAK;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAHtCG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAC3C,EAAA,CA9FID,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AAgGf,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}